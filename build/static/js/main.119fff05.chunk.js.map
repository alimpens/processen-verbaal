{"version":3,"sources":["useDownload.ts","App.js","reportWebVitals.js","index.js"],"names":["useDownload","useState","loading","setLoading","error","setError","url","a","options","fileName","fetch","then","response","blob","fileSaver","split","pop","catch","StyledColumn","styled","Column","StyledForm","form","themeSpacing","StyledSelect","Select","SpinnerWrapper","div","App","data","setData","value","setValue","downloadLoading","downloadFile","resetError","setResetError","useEffect","isMounted","json","ThemeProvider","GlobalStyle","Row","wrap","span","small","medium","big","large","xLarge","push","Heading","gutterBottom","Paragraph","Link","href","variant","onChange","e","target","_embedded","processenverbaal","map","num","places","id","volgnummer","stemlocatie","uri","String","padStart","Button","type","iconLeft","Spinner","Download","onClick","ErrorMessage","message","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","window","addEventListener","top","self","body","className","root","scrollHeight","parent","postMessage","registerHeightObserver","direction"],"mappings":"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","file":"static/js/main.119fff05.chunk.js","sourcesContent":["import { useState } from 'react'\nimport fileSaver from 'file-saver'\n\nfunction useDownload() {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n\n  async function downloadFile(url: string, options = {}, fileName = '') {\n    setLoading(true)\n\n    fetch(url, options)\n      .then((response) => response.blob())\n      .then((blob) => {\n        // @ts-ignore\n        fileSaver(blob, fileName || url.split('/').pop())\n        setLoading(false)\n      })\n      .catch(() => {\n        setError(true)\n        setLoading(false)\n      })\n  }\n\n  return [\n    loading,\n    downloadFile,\n    error\n  ]\n}\n\nexport default useDownload","import { useState, useEffect } from 'react'\nimport {\n  GlobalStyle,\n  ThemeProvider,\n  Row,\n  Column,\n  Heading,\n  Paragraph,\n  Link,\n  Select,\n  Button,\n  themeSpacing,\n  Spinner,\n  ErrorMessage\n} from '@amsterdam/asc-ui'\nimport { Download } from '@amsterdam/asc-assets'\nimport styled from 'styled-components'\nimport useDownload from './useDownload'\n\nconst URL = 'https://api.data.amsterdam.nl/v1/verkiezingen/processenverbaal/?page_size=10000&verkiezingsjaar=2021'\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\n\nconst StyledColumn = styled(Column)`\n  flex-direction: column;\n`\n\nconst StyledForm = styled.form`\n  width: 100%;\n  margin-top: ${themeSpacing(8)};\n`\n\nconst StyledSelect = styled(Select)`\n  max-width: 320px;\n  margin-bottom: ${themeSpacing(9)};\n`\n\nconst SpinnerWrapper = styled.div`\n  max-width: 320px;\n`\n\nfunction App() {\n  const [data, setData] = useState()\n  const [value, setValue] = useState()\n  const [downloadLoading, downloadFile, error] = useDownload()\n  const [resetError, setResetError] = useState(false)\n\n  useEffect(() => {\n    let isMounted = true;\n\n    fetch(URL)\n      .then(response => response.json())\n      .then(json => {\n        if (isMounted) {\n          setData(json)\n        }\n      });\n\n    return () => { isMounted = false; }\n  }, [])\n\n  const handleChange = e => {\n    setValue(e.target.value)\n    setResetError(true)\n  }\n\n  const handleClick = () => {\n    downloadFile(value)\n    setResetError(false)\n  }\n\n  return (\n    <ThemeProvider>\n      <GlobalStyle />\n      <Row>\n        <StyledColumn\n          wrap\n          span={{ small: 1, medium: 2, big: 4, large: 7, xLarge: 7 }}\n          push={{ small: 0, medium: 0, big: 1, large: 1, xLarge: 1 }}\n        >\n          <Heading gutterBottom={28}>Processen-verbaal stemlocaties Tweede Kamerverkiezingen 2021</Heading>\n          <Paragraph>Na de Tweede Kamerverkiezingen in maart 2021 is er door ieder stemlokaal in de stad Amsterdam een proces verbaal opgemaakt.</Paragraph>\n          <Paragraph>Hier kunt u het proces verbaal van alle stemlocaties in Amsterdam vinden.</Paragraph>\n          <Paragraph>\n            <Link href='#' variant='inline'>Bekijk hier de lijst met alle stemlokalen</Link>\n          </Paragraph>\n          {data ?\n          <StyledForm>\n            <StyledSelect value={value} onChange={handleChange}>\n              {data._embedded?.processenverbaal?.map(({ id, volgnummer, stemlocatie, uri }) =>\n                <option\n                  key={id}\n                  value={uri}\n                >\n                  {`Stembureau ${zeroPad(volgnummer, 3)} (${stemlocatie})`}\n                </option>\n              )}\n            </StyledSelect>\n            <Button\n              type='button'\n              iconLeft={downloadLoading ? <Spinner /> : <Download />}\n              onClick={handleClick}\n              variant='primary'\n            >\n              Download\n            </Button>\n            {error && !resetError && <ErrorMessage message=\"Deze download is niet beschikbaar\" />}\n          </StyledForm> :\n          <SpinnerWrapper>\n            <Spinner size={24} />\n          </SpinnerWrapper>}\n        </StyledColumn>\n      </Row>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { registerHeightObserver } from 'element-height-observer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// setup app to work well in iframe\nwindow.addEventListener('load', function () {\n  // add class to body if document is in iframe to remove scrollbar in css\n  if (window.top!==window.self) { document.body.className += \" framed\"}\n\n  const root = document.getElementById('root')\n\n  // send height to iframe onload\n  let message = 'documentHeight:'+root.scrollHeight\n  window.parent.postMessage(message,'*');\n\n  // send height to iframe when height of root changes\n  registerHeightObserver(root, { direction: 'vertical' }, function () {\n    let message = 'documentHeight:'+root.scrollHeight\n    window.parent.postMessage(message,'*');\n  })\n});\n"],"sourceRoot":""}